"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.PrerenderGqlError = exports.JSONParseError = exports.GqlHandlerImportError = void 0;

var _stringify = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/json/stringify"));

var _graphql = require("graphql");

class PrerenderGqlError {
  constructor(message) {
    this.message = void 0;
    this.stack = void 0;
    this.message = 'GQL error: ' + message; // The stacktrace would just point to this file, which isn't helpful,
    // because that's not where the error is. So we're just putting the
    // message there as well

    this.stack = this.message;
  }

}

exports.PrerenderGqlError = PrerenderGqlError;

class GqlHandlerImportError {
  constructor(message) {
    this.message = void 0;
    this.stack = void 0;
    this.message = 'Gql Handler Import Error:  ' + message; // The stacktrace would just point to this file, which isn't helpful,
    // because that's not where the error is. So we're just putting the
    // message there as well

    this.stack = this.message;
  }

}

exports.GqlHandlerImportError = GqlHandlerImportError;

class JSONParseError extends Error {
  constructor({
    query,
    variables,
    result
  }) {
    const message = 'Could not parse the GraphQL response.' + '\n  Request: ' + (0, _graphql.print)(query).split('\n').join('\n  ') + '\n  Variables: ' + (0, _stringify.default)(variables) + '\n  Response: ' + result;
    super(message);
  }

}

exports.JSONParseError = JSONParseError;