import { PartialConfig } from '@babel/core';
export default function babelLoaderCustomize(): {
    config(cfg: PartialConfig): PartialConfig | {
        wrapPluginVisitorMethod: ((pluginAlias: string, visitorType: "enter" | "exit", callback: (path: import("@babel/traverse").NodePath<import("@babel/types").Node>, state: any) => void) => (path: import("@babel/traverse").NodePath<import("@babel/types").Node>, state: any) => void) | null | undefined;
        ast?: boolean | null | undefined;
        auxiliaryCommentAfter?: string | null | undefined;
        auxiliaryCommentBefore?: string | null | undefined;
        root?: string | null | undefined;
        rootMode?: "root" | "upward" | "upward-optional" | undefined;
        configFile?: string | boolean | null | undefined;
        babelrc?: boolean | null | undefined;
        babelrcRoots?: string | boolean | RegExp | ((filename: string | undefined, context: import("@babel/core").MatchPatternContext) => boolean) | import("@babel/core").MatchPattern[] | null | undefined;
        envName?: string | undefined;
        exclude?: string | RegExp | ((filename: string | undefined, context: import("@babel/core").MatchPatternContext) => boolean) | import("@babel/core").MatchPattern[] | undefined;
        code?: boolean | null | undefined;
        comments?: boolean | null | undefined;
        compact?: boolean | "auto" | null | undefined;
        cwd?: string | null | undefined;
        caller?: import("@babel/core").TransformCaller | undefined;
        env?: {
            [index: string]: import("@babel/core").TransformOptions | null | undefined;
        } | null | undefined;
        extends?: string | null | undefined;
        filename?: string | null | undefined;
        filenameRelative?: string | null | undefined;
        generatorOpts?: import("@babel/generator").GeneratorOptions | null | undefined;
        getModuleId?: ((moduleName: string) => string | null | undefined) | null | undefined;
        highlightCode?: boolean | null | undefined;
        ignore?: import("@babel/core").MatchPattern[] | null | undefined;
        include?: string | RegExp | ((filename: string | undefined, context: import("@babel/core").MatchPatternContext) => boolean) | import("@babel/core").MatchPattern[] | undefined;
        inputSourceMap?: object | null | undefined;
        minified?: boolean | null | undefined;
        moduleId?: string | null | undefined;
        moduleIds?: boolean | null | undefined;
        moduleRoot?: string | null | undefined;
        only?: import("@babel/core").MatchPattern[] | null | undefined;
        overrides?: import("@babel/core").TransformOptions[] | undefined;
        parserOpts?: import("@babel/parser").ParserOptions | null | undefined;
        plugins?: import("@babel/core").PluginItem[] | null | undefined;
        presets?: import("@babel/core").PluginItem[] | null | undefined;
        retainLines?: boolean | null | undefined;
        shouldPrintComment?: ((commentContents: string) => boolean) | null | undefined;
        sourceFileName?: string | null | undefined;
        sourceMaps?: boolean | "both" | "inline" | null | undefined;
        sourceRoot?: string | null | undefined;
        sourceType?: "module" | "script" | "unambiguous" | null | undefined;
        test?: string | RegExp | ((filename: string | undefined, context: import("@babel/core").MatchPatternContext) => boolean) | import("@babel/core").MatchPattern[] | undefined;
    };
};
