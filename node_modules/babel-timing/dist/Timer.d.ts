/// <reference types="node" />
import { TransformOptions } from '@babel/core';
import { ResultByFile, Visit } from './types';
declare type HRTime = ReturnType<NodeJS.HRTime>;
export default class Timer {
    private _events;
    private _results;
    private _file;
    wrapPluginVisitorMethod: TransformOptions['wrapPluginVisitorMethod'];
    constructor(file: string);
    _push(pluginAlias: string): void;
    _pop(pluginAlias: string): void;
    getResults(): ResultByFile;
    static getDeltaInMS(start: HRTime): number;
    static getTotalTime(results: {
        time: number;
    }[]): number;
    static addTimePerVisitProperty<Entry extends {
        time: number;
        visits: number;
    }>(entry: Entry): Entry & {
        timePerVisit: number;
    };
    static mergeVisits(...visitArray: Visit[]): Visit[];
}
export {};
