import Pagination from './Pagination';
declare type TableProps<Entry> = {
    title?: string;
    entries?: Entry[];
    entriesMap?: [string, (entry: Entry) => string | number][];
    selectable?: boolean;
    selected?: number;
    paginationSize?: number;
    onSelected?: (index: number) => void;
    onSelectedCommandInfo?: string;
    onEscape?: () => void;
    onEscapeCommandInfo?: string;
    onRender?: (output: string) => void;
};
export default class Table<Entry> {
    props: Required<TableProps<Entry>>;
    pagination: Pagination<string | number>;
    tableHead: string[];
    selectedInCurrentPage: number;
    constructor(props?: TableProps<Entry>);
    getSelectedEntryIndex(): number;
    onKeyPress(ch: unknown, key: {
        name: string;
        ctrl: boolean;
    }): false | void;
    moveSelectionUp(): void;
    moveSelectionDown(): void;
    previousPage(): void;
    nextPage(): void;
    getCommandsInfo(): string;
    unmount(): void;
    render(): void;
}
export {};
