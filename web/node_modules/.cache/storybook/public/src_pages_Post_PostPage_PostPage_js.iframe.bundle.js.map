{"version":3,"file":"src_pages_Post_PostPage_PostPage_js.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;AAJA;AACA;AACA;AAEA;;AAQA;AACA;AAKA;;AAEA;AACA;AACA;AAAA;AAAA;AAIA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAqBA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAOA;AACA;AACA;AAAA;AAAA;AAHA;AAUA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;;;;AAFA;AAEA;AAWA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;;AAEA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA","sources":["webpack://web/./src/components/Post/Post/Post.js","webpack://web/./src/components/Post/PostCell/PostCell.js","webpack://web/./src/pages/Post/PostPage/PostPage.js"],"sourcesContent":["import { useMutation } from '@redwoodjs/web'\nimport { toast } from '@redwoodjs/web/toast'\nimport { Link, routes, navigate } from '@redwoodjs/router'\n\nconst DELETE_POST_MUTATION = gql`\n  mutation DeletePostMutation($id: Int!) {\n    deletePost(id: $id) {\n      id\n    }\n  }\n`\n\nconst jsonDisplay = (obj) => {\n  return (\n    <pre>\n      <code>{JSON.stringify(obj, null, 2)}</code>\n    </pre>\n  )\n}\n\nconst timeTag = (datetime) => {\n  return (\n    <time dateTime={datetime} title={datetime}>\n      {new Date(datetime).toUTCString()}\n    </time>\n  )\n}\n\nconst checkboxInputTag = (checked) => {\n  return <input type=\"checkbox\" checked={checked} disabled />\n}\n\nconst Post = ({ post }) => {\n  const [deletePost] = useMutation(DELETE_POST_MUTATION, {\n    onCompleted: () => {\n      toast.success('Post deleted')\n      navigate(routes.posts())\n    },\n  })\n\n  const onDeleteClick = (id) => {\n    if (confirm('Are you sure you want to delete post ' + id + '?')) {\n      deletePost({ variables: { id } })\n    }\n  }\n\n  return (\n    <>\n      <div className=\"rw-segment\">\n        <header className=\"rw-segment-header\">\n          <h2 className=\"rw-heading rw-heading-secondary\">\n            Post {post.id} Detail\n          </h2>\n        </header>\n        <table className=\"rw-table\">\n          <tbody>\n            <tr>\n              <th>Id</th>\n              <td>{post.id}</td>\n            </tr>\n            <tr>\n              <th>Title</th>\n              <td>{post.title}</td>\n            </tr>\n            <tr>\n              <th>Body</th>\n              <td>{post.body}</td>\n            </tr>\n            <tr>\n              <th>Created at</th>\n              <td>{timeTag(post.createdAt)}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <nav className=\"rw-button-group\">\n        <Link\n          to={routes.editPost({ id: post.id })}\n          className=\"rw-button rw-button-blue\"\n        >\n          Edit\n        </Link>\n        <a\n          href=\"#\"\n          className=\"rw-button rw-button-red\"\n          onClick={() => onDeleteClick(post.id)}\n        >\n          Delete\n        </a>\n      </nav>\n    </>\n  )\n}\n\nexport default Post\n","import Post from 'src/components/Post/Post'\n\nexport const QUERY = gql`\n  query FindPostById($id: Int!) {\n    post: post(id: $id) {\n      id\n      title\n      body\n      createdAt\n    }\n  }\n`\n\nexport const Loading = () => <div>Loading...</div>\n\nexport const Empty = () => <div>Post not found</div>\n\nexport const Success = ({ post }) => {\n  return <Post post={post} />\n}\n","import PostCell from 'src/components/Post/PostCell'\n\nconst PostPage = ({ id }) => {\n  return <PostCell id={id} />\n}\n\nexport default PostPage\n"],"names":[],"sourceRoot":""}