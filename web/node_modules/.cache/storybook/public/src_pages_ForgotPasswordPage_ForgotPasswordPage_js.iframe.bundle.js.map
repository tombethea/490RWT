{"version":3,"file":"src_pages_ForgotPasswordPage_ForgotPasswordPage_js.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AADA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAgBA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AAUA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAUA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://web/./src/pages/ForgotPasswordPage/ForgotPasswordPage.js","webpack://web/../node_modules/core-js/internals/async-iterator-iteration.js","webpack://web/../node_modules/core-js/modules/esnext.async-iterator.for-each.js","webpack://web/../node_modules/core-js/modules/esnext.iterator.constructor.js","webpack://web/../node_modules/core-js/modules/esnext.iterator.for-each.js"],"sourcesContent":["import { useEffect, useRef } from 'react'\nimport { useAuth } from '@redwoodjs/auth'\nimport { navigate, routes } from '@redwoodjs/router'\nimport { MetaTags } from '@redwoodjs/web'\nimport { toast, Toaster } from '@redwoodjs/web/toast'\nimport { Form, Label, TextField, Submit, FieldError } from '@redwoodjs/forms'\n\nconst ForgotPasswordPage = () => {\n  const { isAuthenticated, forgotPassword } = useAuth()\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate(routes.home())\n    }\n  }, [isAuthenticated])\n\n  const usernameRef = useRef()\n  useEffect(() => {\n    usernameRef.current.focus()\n  }, [])\n\n  const onSubmit = async (data) => {\n    const response = await forgotPassword(data.username)\n\n    if (response.error) {\n      toast.error(response.error)\n    } else {\n      // The function `forgotPassword.handler` in api/src/functions/auth.js has\n      // been invoked, let the user know how to get the link to reset their\n      // password (sent in email, perhaps?)\n      toast.success(\n        'A link to reset your password was sent to ' + response.email\n      )\n      navigate(routes.login())\n    }\n  }\n\n  return (\n    <>\n      <MetaTags title=\"Forgot Password\" />\n\n      <main className=\"rw-main\">\n        <Toaster toastOptions={{ className: 'rw-toast', duration: 6000 }} />\n        <div className=\"rw-scaffold rw-login-container\">\n          <div className=\"rw-segment\">\n            <header className=\"rw-segment-header\">\n              <h2 className=\"rw-heading rw-heading-secondary\">\n                Forgot Password\n              </h2>\n            </header>\n\n            <div className=\"rw-segment-main\">\n              <div className=\"rw-form-wrapper\">\n                <Form onSubmit={onSubmit} className=\"rw-form-wrapper\">\n                  <div className=\"text-left\">\n                    <Label\n                      name=\"username\"\n                      className=\"rw-label\"\n                      errorClassName=\"rw-label rw-label-error\"\n                    >\n                      Username\n                    </Label>\n                    <TextField\n                      name=\"username\"\n                      className=\"rw-input\"\n                      errorClassName=\"rw-input rw-input-error\"\n                      ref={usernameRef}\n                      validation={{\n                        required: true,\n                      }}\n                    />\n\n                    <FieldError name=\"username\" className=\"rw-field-error\" />\n                  </div>\n\n                  <div className=\"rw-button-group\">\n                    <Submit className=\"rw-button rw-button-blue\">Submit</Submit>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </>\n  )\n}\n\nexport default ForgotPasswordPage\n","'use strict';\n// https://github.com/tc39/proposal-iterator-helpers\n// https://github.com/tc39/proposal-array-from-async\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar getBuiltIn = require('../internals/get-built-in');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar closeAsyncIteration = require('../internals/async-iterator-close');\n\nvar createMethod = function (TYPE) {\n  var IS_TO_ARRAY = TYPE == 0;\n  var IS_FOR_EACH = TYPE == 1;\n  var IS_EVERY = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  return function (object, fn, target) {\n    var record = getIteratorDirect(object);\n    var Promise = getBuiltIn('Promise');\n    var iterator = record.iterator;\n    var next = record.next;\n    var index = 0;\n    var MAPPING = fn !== undefined;\n    if (MAPPING || !IS_TO_ARRAY) aCallable(fn);\n\n    return new Promise(function (resolve, reject) {\n      var ifAbruptCloseAsyncIterator = function (error) {\n        closeAsyncIteration(iterator, reject, error, reject);\n      };\n\n      var loop = function () {\n        try {\n          if (IS_TO_ARRAY && MAPPING) try {\n            doesNotExceedSafeInteger(index);\n          } catch (error5) { ifAbruptCloseAsyncIterator(error5); }\n          Promise.resolve(anObject(call(next, iterator))).then(function (step) {\n            try {\n              if (anObject(step).done) {\n                if (IS_TO_ARRAY) {\n                  target.length = index;\n                  resolve(target);\n                } else resolve(IS_SOME ? false : IS_EVERY || undefined);\n              } else {\n                var value = step.value;\n                try {\n                  if (MAPPING) {\n                    Promise.resolve(IS_TO_ARRAY ? fn(value, index) : fn(value)).then(function (result) {\n                      if (IS_FOR_EACH) {\n                        loop();\n                      } else if (IS_EVERY) {\n                        result ? loop() : closeAsyncIteration(iterator, resolve, false, reject);\n                      } else if (IS_TO_ARRAY) {\n                        try {\n                          target[index++] = result;\n                          loop();\n                        } catch (error4) { ifAbruptCloseAsyncIterator(error4); }\n                      } else {\n                        result ? closeAsyncIteration(iterator, resolve, IS_SOME || value, reject) : loop();\n                      }\n                    }, ifAbruptCloseAsyncIterator);\n                  } else {\n                    target[index++] = value;\n                    loop();\n                  }\n                } catch (error3) { ifAbruptCloseAsyncIterator(error3); }\n              }\n            } catch (error2) { reject(error2); }\n          }, reject);\n        } catch (error) { reject(error); }\n      };\n\n      loop();\n    });\n  };\n};\n\nmodule.exports = {\n  toArray: createMethod(0),\n  forEach: createMethod(1),\n  every: createMethod(2),\n  some: createMethod(3),\n  find: createMethod(4)\n};\n","'use strict';\n// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\nvar $forEach = require('../internals/async-iterator-iteration').forEach;\n\n$({ target: 'AsyncIterator', proto: true, real: true, forced: true }, {\n  forEach: function forEach(fn) {\n    return $forEach(this, fn);\n  }\n});\n","'use strict';\n// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar anInstance = require('../internals/an-instance');\nvar isCallable = require('../internals/is-callable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar IS_PURE = require('../internals/is-pure');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nvar NativeIterator = global.Iterator;\n\n// FF56- have non-standard global helper `Iterator`\nvar FORCED = IS_PURE\n  || !isCallable(NativeIterator)\n  || NativeIterator.prototype !== IteratorPrototype\n  // FF44- non-standard `Iterator` passes previous tests\n  || !fails(function () { NativeIterator({}); });\n\nvar IteratorConstructor = function Iterator() {\n  anInstance(this, IteratorPrototype);\n};\n\nif (!hasOwn(IteratorPrototype, TO_STRING_TAG)) {\n  createNonEnumerableProperty(IteratorPrototype, TO_STRING_TAG, 'Iterator');\n}\n\nif (FORCED || !hasOwn(IteratorPrototype, 'constructor') || IteratorPrototype.constructor === Object) {\n  createNonEnumerableProperty(IteratorPrototype, 'constructor', IteratorConstructor);\n}\n\nIteratorConstructor.prototype = IteratorPrototype;\n\n$({ global: true, constructor: true, forced: FORCED }, {\n  Iterator: IteratorConstructor\n});\n","'use strict';\n// https://github.com/tc39/proposal-iterator-helpers\nvar $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\n$({ target: 'Iterator', proto: true, real: true, forced: true }, {\n  forEach: function forEach(fn) {\n    iterate(getIteratorDirect(this), fn, { IS_RECORD: true });\n  }\n});\n"],"names":[],"sourceRoot":""}